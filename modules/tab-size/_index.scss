@use '../../configs' as *;
@use '../prefixer' as *;
@use '../utilities/is-int' as *;
@use '../@invalid-value-message' as *;

/// Миксин `tab-size()` позволяет сгенерировать
/// свойство `tab-size` с нужными браузерными
/// префиксами.
/// ---
/// @name tab-size
/// @access public
/// @since 6.0.0
/// @author Haba Kudzaev (rx1310)
/// @link https://rx1310.github.io/kalium19
/// @example scss - Пример использования в Sass (SCSS)
/// 	.example {
/// 		@include tab-size(3);
/// 	}
/// @example css - Результат в CSS
/// 	.example {
/// 	  -moz-tab-size: 3;
/// 	  -o-tab-size: 3;
/// 	  tab-size: 3;
/// 	}
/// @param {Number} $size [2] - значение CSS-свойства `tab-size`
/// @require {function} is-int
@mixin tab-size($size: 2) {

	// С помощью функции `is-int()` проверяем
	// соответствие значение `$size` Sass-типу
	// `Number`:
	@if is-int($size, false) {

		// Если тип определен как `Number`,
		// то с помощью миксина `prefixer()`
		// добавляем нужные браузерные префиксы
		// CSS-свойству `tab-size`:
		@include prefixer(
			tab-size,
			$size,
			$prefixes-tab-size
		);

	}

	// Если функция `is-int()` выдала
	// `false`, то отображаем ошибку:
	@else {
		@include invalid-value-message(
			$vvalues-tab-size,
			tab-size,
			$size
		);
	}

}
