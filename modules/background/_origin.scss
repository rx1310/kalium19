@use '../../configs' as *;
@use '../prefixer' as *;
@use '../utilities/is-exist' as *;
@use '../@invalid-value-message' as *;

/// Миксин позволяет сгенерировать CSS-свойство
/// `background-origin` с необходимыми префиксами, а также
/// с проверкой на значение, чтобы обезопасить от ошибки.
/// ---
/// @name background-origin
/// @access public
/// @since 6.0.0
/// @author Haba Kudzaev (rx1310)
/// @link https://rx1310.github.io/kalium19
/// @example scss - Пример использования в Sass (SCSS)
/// 	.example {
/// 		@include background-origin(content-box)
/// 	}
/// @example css - Результат в CSS
/// 	.example {
/// 		-webkit-background-origin: content-box;
/// 		-moz-background-origin: content-box;
/// 		-o-background-origin: content-box;
/// 		background-origin: content-box;
/// 	}
/// @param {String} $value [$dvalue-background-origin] - значение CSS-свойства `background-origin`..
@mixin background-origin($value: $dvalue-background-origin) {

	// С помощью функции `is-exist()` проверяем наличие значения `$value`
	// в списке `$vvalue-background-origin`:
	@if is-exist($vvalue-background-origin, $value) {

		// Если есть совпадение, то с помощью миксина `prefixer()`
		// генерирую CSS-свойство `background-origin` со всеми
		// необходимыми браузерными префиксами:
		@include prefixer(
			background-origin,
			$value,
			$prefixes-background-origin
		);

	}

	// Если совпадений нет, то показываем сообщение об этом:
	@else {
		@include invalid-value-message(
			$vvalue-background-origin,
			background-origin,
			$value
		);
	}

}
