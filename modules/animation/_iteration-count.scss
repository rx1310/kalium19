@use '../../configs' as *;
@use '../prefixer' as *;
@use '../utilities/is-exist' as *;
@use '../utilities/is-int' as *;
@use '../@invalid-value-message' as *;

/// Миксин `animation-iteration-count()` позволяет сгенерировать
/// CSS-свойство `animation-iteration-count` со всеми нужными
/// браузерными префиксами и добавляет проверку вводимого
/// значения, чтобы не было ошибок.
/// ---
/// @name animation-iteration-count
/// @access public
/// @since 6.0.0
/// @author Haba Kudzaev (rx1310)
/// @link https://rx1310.github.io/kalium19
/// @example scss - Пример использования в Sass (SCSS)
/// 	.example {
/// 		@include animation-iteration-count(infinite);
/// 	}
/// @example css - Результат в CSS
/// 	.example {
/// 		-webkit-animation-iteration-count: infinite;
/// 		-moz-animation-iteration-count: infinite;
/// 		-o-animation-iteration-count: infinite;
/// 		animation-iteration-count: infinite;
/// 	}
/// @param {String} $count [$dvalue-animation-iteration-count] - значение свойства `animation-iteration-count`
@mixin animation-iteration-count($count: $dvalue-animation-iteration-count) {

	// Если значение `$count` является числом или соответствует
	// списку `$vvalues-animation-iteration-count`, то генерируем
	// CSS-свойство `animation-iteration-count` со всеми нужными
	// браузерными префиксами:
	@if is-int($count, false) or is-exist($vvalues-animation-iteration-count, $count) {
		@include prefixer(animation-iteration-count, $count, $prefixes-animation-iteration-count);
	}

	// Если соответствие не найдено, то
	// выводим ошибку:
	@else {
		@include invalid-value-message($vvalues-animation-iteration-count, animation-iteration-count, $count);
	}

}
