/// –§—É–Ω–∫—Ü–∏—è `map-deep-set()` –¥–ª—è
/// —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–∞—Ö.
/// ---
/// @name map-deep-set
/// @group utils
/// @access public
/// @since 6.0.0
/// @author Kitty Giraudel
/// @link https://github.com/KittyGiraudel
/// @example scss - –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
/// 	$testMap: (
/// 		string: "Kalium19",
/// 		int: "1310"
/// 	);
///
/// 	@debug map-deep-set($testMap, string, Compass); //=> (string: Compass, int: "1310")
/// 	@debug map-deep-set($testMap, int, 2020); //=> (string: "Kalium19", int: 2020)
/// @param {Map} $map - –∫–∞—Ä—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
/// @param {List} $keys - –∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å
/// @param {*} $value - –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ `$keys`
/// @return {Map} —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–∏—è–Ω–∏—è
@function map-deep-set($map, $keys, $value) {

	$maps: ($map,);
	$result: null;

	// –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª—é—á —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ä—Ç–æ–π
	// –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –º—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–º –µ–≥–æ —Å –ø–æ–º–æ—â—å—é `$value`:
	@if type-of(nth($keys, -1)) == "map" {
		@warn "üî∂ –ü–æ—Å–ª–µ–¥–Ω–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–ª—é—á ‚Äî —ç—Ç–æ –∫–∞—Ä—Ç–∞; –æ–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Å –ø–æ–º–æ—â—å—é `#{$value}`.";
	}

	// –ï—Å–ª–∏ `$keys` - —ç—Ç–æ –æ–¥–∏–Ω –∫–ª—é—á,
	// –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å:
	@if length($keys) == 1 {
		@return map-merge($map, ($keys: $value));
	}

	// –ü—Ä–æ–π—Ç–∏—Å—å —Ü–∏–∫–ª–æ–º –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –¥–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
	// –∫–ª—é—á–∞ –∏–∑ `$keys` –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É
	// —Å —ç—Ç–∏–º –∫–ª—é—á–æ–º –≤ —Å–ø–∏—Å–∫–µ `$maps`.
	// –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:
	@for $i from 1 through length($keys) - 1 {

		$current-key: nth($keys, $i);
		$current-map: nth($maps, -1);
		$current-get: map-get(
			$current-map,
			$current-key
		);

		@if $current-get == null {
			@error "‚õî –ö–ª—é—á `#{$key}` –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ –∫–∞—Ä—Ç—ã.";
		}

		$maps: append($maps, $current-get);

	}

	// –ü—Ä–æ–π—Ç–∏—Å—å —Ü–∏–∫–ª–æ–º –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–∞—Ä—Ç—ã –∫ –ø–µ—Ä–≤–æ–π
	// –∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –µ–≥–æ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º:
	@for $i from length($maps) through 1 {

		$current-map: nth($maps, $i);
		$current-key: nth($keys, $i);
		$current-val: if(
			$i == length($maps),
			$value,
			$result
		);

		$result: map-merge(
			$current-map,
			($current-key: $current-val)
		);

	}

	@return $result;

}
